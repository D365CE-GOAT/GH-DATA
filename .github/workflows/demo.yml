name: Deploy website
on:
  push:
    branches:
      - master
jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Get code
        uses: actions/checkout@v3
      - name: Cache dependencies # to cache the dependencies and use it in another job
        uses: actions/cache@v3
        with: 
          path: ~/.npm  # github  already creates a cache, we telling github to reuse it , it is exists
          key: deps-node-modules-${{hashFiles('**/package-lock.json')}} # use to retrieve the cache and explains if the key should be changed when the dependencies change that is what the hash is for
      - name: Install dependencies
        run: npm ci # if the dependencies don't exist or have changed, they will be reinstalled
      - name: Lint code
        run: npm run lint
      - name: Test code
        run: npm run test
  build:
    needs: test
    runs-on: ubuntu-latest
    outputs:
      script-file: ${{steps.publish.outputs.script-file}}
    steps:
      - name: Get code
        uses: actions/checkout@v3
      - name: Cache dependencies # to use depedencies that were used or created in test
        uses: actions/cache@v3
        with: 
          path: ~/.npm  
          key: deps-node-modules-${{hashFiles('**/package-lock.json')}}
      - name: Install dependencies
        run: npm ci
      - name: Build website
        run: npm run build
      - name: Publish JS filename
        id: publish
        run: |
          for file in dist/assets/*.js; do
          echo "script-file=$file" >> $GITHUB_OUTPUT
          break  # stop after the first match
          done
      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: dist-files
          path: |
            dist
            package.json

  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          name: dist-files
      - name: Output content
        run: ls
      - name: Output filename
        run: echo "${{needs.build.outputs.script-file}}" 
      - name: Deploy
        run: echo "Deploying..."
